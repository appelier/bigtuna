- if f.object.errors.any?
  - f.object.errors.full_messages.each do |msg|
    %p= msg

%div
  = f.label(:name)
  %br
  = f.text_field(:name, :class => 'textfield')
%div
  = f.label(:vcs_type)
  %br
  = f.select(:vcs_type, BigTuna.vcses.map { |klass| [klass::NAME, klass::VALUE] }, :class => 'textfield')
%div
  = f.label(:vcs_source)
  %br
  = f.text_field(:vcs_source, :class => 'textfield')
%div
  = f.label(:vcs_branch)
  %br
  = f.text_field(:vcs_branch, :class => 'textfield')
%div
  = f.label(:fetch_type)
  %br
  = f.label(:clone)
  = f.radio_button(:fetch_type, :clone)
  = f.label(:incremental)
  = f.radio_button(:fetch_type, :incremental)
%div
  = f.label(:max_builds)
  %br
  = f.text_field(:max_builds, :class => 'textfield')
%div
  Hooks
  - BigTuna.hooks.each do |hook|
    %div{:id => "hook_#{hook::NAME}", :class => "hint"}
      %label{:for => "project_hooks_#{hook::NAME}"}
        = check_box_tag("project[hooks][#{hook::NAME}]", hook::NAME, f.object.hooks.map { |e| e.hook_name }.include?(hook::NAME))
        = hook::NAME
      = link_to("Configure", project_config_hook_path(f.object, hook::NAME)) if f.object.hooks.map { |e| e.hook_name }.include?(hook::NAME)
%div
  = f.label(:hook_name)
  %br
  = f.text_field(:hook_name, :class => 'textfield')
  %br
  %span.hint
    POST to
    %tt http://big.tuna.host/hooks/build/:hook_name:
    to build automatically
  = f.hidden_field(:hook_update, {:value => true})
%div
  %button.black_button{:type => "submit"}
    = f.object.new_record? ? "Create" : "Update"
  = link_to("Back to project", project_path(f.object), :class => "black_button") unless f.object.new_record?
