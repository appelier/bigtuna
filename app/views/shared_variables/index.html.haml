%h2= "Shared variables for &ldquo;#{@step_list.project.name}&rdquo;".html_safe

%p
  You can set up configuration&ndash;specific 
  <code>%variables%</code> here. Real&ndash;life examples would be:

%ul
  %li
    %tt
      %code %runner%
      rvm 1.8.7 exec
  %li
    %tt  
      %code %envs%
      env RAILS_ENV=test BUNDLE_GEMFILE=%build_dir%/Gemfile

%p And then use them in steps like:

<pre>cp /shared/config.yml %build_dir%/config/
\%runner% %envs% bundle install --deployment --path=%project_dir%/bundle
\%runner% %envs% bundle exec rake db:migrate
\%runner% %envs% bundle exec rake</pre>

%p Shared variables cannot contain other shared variables except <code>%build_dir%</code> and <code>%project_dir%</code>.

%h3 Create new variable
= form_for(@shared_variable, :url => shared_variables_path(:step_list_id => @step_list)) do |f|
  .clearfix 
    = f.label(:name)
    .input
      = f.text_field(:name, :class => 'pre')
  .clearfix 
    = f.label(:value)
    .input
      = f.text_field(:value, :class => 'span8 pre')
  .actions 
    %button.btn.primary{:type => "submit"}
      = f.object.new_record? ? "Create" : "Update"

- if @shared_variables.any?
  %h3 Already existing variables
  - @shared_variables.each do |variable|
    = form_for(variable, :url => shared_variable_path(variable, :step_list_id => @step_list)) do |f|
      .clearfix
        = f.label(:name)
        .input
          = f.text_field(:name, :class => 'pre')
      .clearfix 
        = f.label(:value)
        .input
          = f.text_field(:value, :class => 'span8 pre')
      .actions 
        %button.btn.primary{:type => "submit"} Update
    = form_for(variable, :url => shared_variable_path(variable, :step_list_id => @step_list), :html => {:method => :delete}) do |f|
      %button.btn.danger{:type => "submit"} Remove
